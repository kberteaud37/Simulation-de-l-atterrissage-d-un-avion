import streamlit as st
import classes
from classes.aeroports.fonctions_aeroport import recuperer_runways, recuperer_airports

st.set_page_config(page_title="S√©lecteur d'A√©roport", layout="centered")

st.title("üõ¨ S√©lection d'un a√©roport et d'une piste")

# R√©cup√©ration des donn√©es
runways_df = recuperer_runways()
airports_df = recuperer_airports()

# Liste des codes a√©roports disponibles
airport_codes = airports_df["ident"].tolist()

# S√©lection d'un a√©roport (filtrable)
code_aeroport = st.selectbox("Choisissez un a√©roport (code ICAO)", options=airport_codes)

if code_aeroport:
    # Cr√©ation de l'objet a√©roport
    aeroport = classes.aeroports.Aeroport(code_aeroport, runways_df)

    # Affichage des infos a√©roport
    st.subheader("üõ´ Informations sur l'a√©roport s√©lectionn√©")
    aeroport_info = aeroport.afficher_infos()  # Cette m√©thode affiche dans la console

    # Si la m√©thode afficher_infos() imprime juste au lieu de retourner une string, on la redirige :
    import io
    import sys
    buffer = io.StringIO()
    sys.stdout = buffer
    aeroport.afficher_infos()
    sys.stdout = sys.__stdout__
    infos_texte = buffer.getvalue()
    st.text(infos_texte)

    # Pistes disponibles pour cet a√©roport
    pistes_dispo = runways_df[runways_df["ident"] == code_aeroport]["runway_ident"].unique()
    piste_choisie = st.selectbox("Choisissez une piste", options=pistes_dispo)

    if piste_choisie:
        st.success(f"Piste s√©lectionn√©e : {piste_choisie}")